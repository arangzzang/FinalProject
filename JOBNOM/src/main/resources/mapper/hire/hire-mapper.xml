<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hire">
	<!--  <resultMap type="recruitment" id="recruitmentMap">
		<result column="REC_NO" property="rec_no"/>
		<result column=ENT_NO property="ent_no"/>
		<result column="REC_TITLE" property="rec_title"/>
		<result column="REC_CONTENTS" property="rec_content"/>
		<result column="REC_FILE1" property="rec_file1"/>
		<result column="REC_FILE2" property="rec_file2"/>
		<result column="REC_STARTDATE" property="rec_startdate"/>
		<result column="REC_ENDDATE" property="rec_enddate"/>
		<result column="REC_SALARY" property="rec_salary"/>
		<result column="REC_INFO" property="rec_info"/>
		<result column="REC_PREFER" property=rec_prefer/>
		<result column="REC_WELFARE" property="rec_welfare"/>
		<result column="REC_QUALIFICATION" property="rec_qualification"/>
		<result column="REC_PEPOLE" property="rec_pepole"/>
		<result column="RE_TYPE" property="rec_type"/>
	
	</resultMap>  -->
	<resultMap type="ent" id="entMap">
		<result column="ent_name" property="entName"/>
		<result column="ent_no" property="entNo"/>
		
	</resultMap>

	

	<insert id="insertReview" parameterType="map">
		INSERT INTO REVIEW
		VALUES(seq_review_no.nextval,#{ent_no},#{mem_no},#{review_title},#{review_contents},#{review_satisfaction},#{review_welfare},#{review_promotion},#{review_executive},SYSDATE)
	</insert>
	
	<select id="selectCount" resultType="_int">
	 SELECT COUNT(*) FROM RECRUITMENT 
	</select>

	
	
	<select id="RecruitmentList" resultType="com.project.jobnom.Hire.model.vo.Recruitment">
		SELECT * FROM RECRUITMENT
	</select>
	
	
	<select id="MemberList" parameterType="String" resultType="map">
		 	SELECT DISTINCT  M.*,RES_NAME
            FROM MEMBER M 
             LEFT   JOIN RESUME R ON (R.MEM_NO = M.MEM_NO)
            WHERE M.MEM_NO =#{mem_no}
		
	</select>
	
	<select id="HireHomeRecruitmentList" resultType="map">
	   SELECT R.*, ENT_LOGO
            FROM RECRUITMENT  R
             LEFT   JOIN enterprise E ON (E.ENT_NO = R.ENT_NO)
	
	</select>
	
	
	
	
	<select id="reviewStar" resultType="map">
	 	SELECT  ENT_NAME,REVIEW_SATISFACTION 
		FROM REVIEW R 
		JOIN ENTERPRICE E ON (R.ENT_NO = E.ENT_NO)
	</select>
	
	<select id="selectRecruitmentList" parameterType="map" resultType="java.util.HashMap">
		         
              SELECT DISTINCT E.REC_NO,E.ENT_NO, REC_TITLE,REC_OTHER, REC_CONTENTS, REC_STARTDATE, REC_ENDDATE, REC_INFO,REC_PREFER, REC_WELFARE, REC_QUALIFICATION, REC_PEPOLE, REC_CAREER, REC_ORDER,
                 REC_TYPE, REC_CATEGORY,ENT_NAME,T.MEM_NO,OPEN_CHECK, REP_NAME, REP_PHONE,ENT_LOGO, REPLACE(REC_SALARY,' ')  AS REC_SALARY
			FROM RECRUITMENT E 
			LEFT JOIN ENTERPRISE R ON (R.ENT_NO = E.ENT_NO)
           LEFT JOIN INTERESTEDRECRUITMENT T ON (T.REC_NO = E.REC_NO)
              LEFT JOIN SUPPORT S ON (S.REC_NO = E.REC_NO)
            LEFT JOIN MEMBER M ON (M.MEM_NO = S.MEM_NO)
			WHERE E.REC_NO=#{rec_no}
			ORDER BY T.MEM_NO ASC 

	</select>
	
	<select id="selectReviewList" parameterType="string" resultType="java.util.HashMap">
		SELECT  R.REC_NO,E.ENT_NO, R.REC_TITLE, ENT_NAME,REVIEW_TITLE,REVIEW_CONTENTS,REVIEW_SATISFACTION,
		 REVIEW_WELFARE, REVIEW_PROMOTION , REVIEW_EXECUTIVE
		FROM REVIEW E 
        JOIN RECRUITMENT R ON (E.ENT_NO = R.ENT_NO)
        JOIN ENTERPRISE S  ON (E.ENT_NO = S.ENT_NO)
		WHERE E.ENT_NO=#{ent_no} 
	</select>
	
	<insert id="insertMemberApply" parameterType="map" >
	INSERT INTO SUPPORT
		VALUES(SEQ_APP_NO.NEXTVAL,#{memNo},#{recNo},SYSDATE)
	</insert>
	
	<!-- 즐겨찾기 하기 -->
	<insert id="recFavorites" parameterType="map" >
	INSERT INTO INTERESTEDRECRUITMENT
		VALUES(SEQ_HIRE_NO.NEXTVAL,#{recNo},#{memNo},1)
	</insert> 
	
	
	<!-- 즐겨찾기 없애기 -->
	<delete id="notFavorites" parameterType="map">
		DELETE FROM INTERESTEDRECRUITMENT WHERE REC_NO=#{recNo} AND MEM_NO=#{memNo} AND OPEN_CHECK=1
	</delete>
	
	<select id="HireMyHire" parameterType="string" resultType="com.project.jobnom.Hire.model.vo.Support">
		  			SELECT S.*, ENT_NAME,REC_TITLE,REC_CONTENTS
                      FROM SUPPORT S
                       JOIN RECRUITMENT R ON(R.REC_NO = S.REC_NO)
                       JOIN ENTERPRISE E ON(E.ENT_NO = R.ENT_NO)
                      WHERE MEM_NO=#{memNo}
                      ORDER BY APP_NO DESC
	</select>
	
	<select id="selectSuppertCount" resultType="_int"  parameterType="string">
		SELECT  COUNT(*) FROM SUPPORT WHERE MEM_NO=#{memNo}
	</select>
	
	<select id="HireFavorites" parameterType="string" resultType="com.project.jobnom.Hire.model.vo.Interestedrcruitment">
		  			  SELECT T.*,REC_TITLE,E.ENT_NAME, ENT_LOGO, E.ENT_NO
                      FROM INTERESTEDRECRUITMENT T
                    LEFT JOIN RECRUITMENT R ON (R.REC_NO = T.REC_NO) 
                       JOIN ENTERPRISE E ON (E.ENT_NO = R.ENT_NO)
                          WHERE MEM_NO=#{memNo}
                          ORDER BY HIRE_NO DESC 
	</select>
	<select id="selectInterestedrcruitmentCount" resultType="_int" parameterType="string">
		                       SELECT  COUNT(*) FROM INTERESTEDRECRUITMENT  WHERE MEM_NO=#{memNo}
	</select>
	
	<select id="selectOneRecruitment"  parameterType="string" resultMap="entMap">
	 	
	 	select ent_Name from enterprise
	 	where ent_Name like '%'||#{key}||'%'
             
	
	</select>
	

	<select id="recSerch" parameterType="string" resultType="com.project.jobnom.Hire.model.vo.Recruitment">
		SELECT E.*,ENT_NAME ,REC_CATEGORY,
			 REP_NAME, REP_PHONE,ENT_LOGO
			FROM RECRUITMENT E 
			   JOIN REVIEW S ON (S.ENT_NO = E.ENT_NO)
			JOIN ENTERPRISE R ON (R.ENT_NO = E.ENT_NO)
			  WHERE REC_CATEGORY=#{rec_no}
	</select>
	
	<select id="selectMemberApply" parameterType="map" resultType="map">
	         SELECT DISTINCT E.*,REC_TITLE
	      FROM ENTERPRISE E
              JOIN RECRUITMENT R ON (R.ENT_NO=E.ENT_NO)
              JOIN SUPPORT S ON (S.REC_NO=R.REC_NO)
              WHERE S.MEM_NO=#{memNo} AND R.REC_NO=#{recNo}
	</select>
	
	<select id="MemberFitList" resultType="map" parameterType="string">
			SELECT DISTINCT R.*,M.MEM_NO,M.CATE_NO2, JOBS2, OPEN_CHECK
               FROM RECRUITMENT R
               LEFT JOIN INTERESTEDRECRUITMENT T ON(T.REC_NO=R.REC_NO)
               JOIN SUPPORT S ON(S.REC_NO=R.REC_NO) 
               JOIN MEMBER M ON(M.MEM_NO=S.MEM_NO)
               JOIN CATEGORY2 C ON(C.CATE_NO2 = M.CATE_NO2)
               WHERE M.MEM_NO=#{memNo}
               
               
	</select>
	
	<select id="reviewSearch2" parameterType="string" resultMap="entMap">
		select ent_No from enterprise
	 	where ent_Name like '%'||#{key}||'%'
             
	</select>
	
	<select id="reviewSearch3"  resultMap="entMap" parameterType="String">
		select ent_Name from enterprise
		where ent_Name=#{key}
	</select>
	
	<select id="mypageView" resultType="map" >
		SELECT ENT_NAME FROM ENTERPRISE
	
	</select>
	<select id="swiper" resultType="com.project.jobnom.Hire.model.vo.Recruitment" parameterType="String">
		 SELECT  REC_NO, ENT_NO, REC_TITLE, REC_CONTENTS, REC_ENDDATE,REC_INFO,  REPLACE(REC_SALARY,' ')  AS REC_SALARY
		  FROM RECRUITMENT
		WHERE REC_NO =#{rec_no}	
		</select>
	
	<select id="membercate2" resultType="com.project.jobnom.Hire.model.vo.Recruitment" parameterType="String" >
		    <!--  SELECT M.*, JOBS2
                FROM MEMBER M
                 JOIN CATEGORY2 R ON(R.CATE_NO2 = M.CATE_NO2)
                 WHERE M.CATE_NO2=#{rec_category} -->
                 SELECT JOBS2 FROM CATEGORY2 
                 WHERE CATE_NO2=#{rec_category}
	</select>
	
	
</mapper> 
