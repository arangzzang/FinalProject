<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.project.jobnom" />
	
	<!-- 인터셉터 설정 -->
	<!-- <interceptors>
		<interceptor>
			<mapping path="/**"/>
			<exclude-mapping path="/member/*"/><exclude-mapping> : 전체에서 맴버만 제외한다는 뜻
			<beans:bean id="logger" class=""/>
		</interceptor>
		<interceptor>
			<mapping path="/demo/*"/>
			<beans:bean id="logincheck" class="" name="checkLog"></beans:bean>
		</interceptor>
		<interceptor>
			<mapping path="/board/*"/>
			<beans:bean id="boardcheck"	class=""></beans:bean>
		</interceptor>
	</interceptors> -->
	
	<!-- 파일데이터 처리하는 bean 등록 -->
	<!-- <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"/>
	</beans:bean> -->
	
	<!-- jsonView 연결하기 : resolver 등록하기 -->
   <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
      <!-- 우선순위 실행순서 정해주기 숫자는 낮은숫자가 우선순위 -->
      <beans:property name="order" value="1"/>
   </beans:bean>
   <beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView"/>
	
	<!-- jackson converter등록하기 -->
	<beans:bean id="jacksonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	
</beans:beans>
